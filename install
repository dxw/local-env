#!/bin/bash

set -e

cd "$(dirname "$0")"

source lib/arch.sh
source lib/print.sh
source lib/run.sh

say-loud "Welcome to dxw!"
say "Let's get you set up"
say "This may take a while..."
say "You might want to find something else to do while we do this"
say "But don't go away completely! You'll need to do things at points"

if ! ask_yN "Are you ready?"; then
  say-loud "Goodbye!"
  exit 1
fi

if ! macos; then
  instruct "It looks like you're not running this in macOS"
  instruct "We don't support other operating systems, sorry!"
  exit 1
fi

# Begin Rosetta

if m1; then
  say "It looks like you're on a Mac with Apple silicon"
  say-loud "Installing the Intel compatibility layer, Rosetta"
  say "You might be asked for your login password and to agree to terms and conditions..."
  run arch -arm64e softwareupdate --install-rosetta
fi

# End Rosetta

# Begin Homebrew

if m1; then
  say-loud "Installing Homebrew for Apple silicon software"
  say "You might be asked for your login password and to confirm"
  say "Once you've confirmed, this might take a few minutes..."
  run arch -arm64e /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

  say-loud "Installing Homebrew for Intel software"
  say "You might be asked for your login password and to confirm"
  say "Once you've confirmed, this might take a few minutes..."
  run arch -x86_64 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
else
  say-loud "Installing Homebrew"
  say "You might be asked for your login password and to confirm"
  say "Once you've confirmed, this might take a few minutes..."
  run /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

instruct "Homebrew manages software on your machine for you"
instruct "Try to use it when you need to install new things"
instruct "It will make keeping them up to date easier"
instruct "You can install most apps using it too!"
say "See https://brew.sh/ for more information about Homebrew"

say-loud "Configuring Homebrew for the rest of this install..."
if m1; then
  eval "$(/usr/local/homebrew/bin/brew shellenv)"
  eval "$(/opt/homebrew/bin/brew shellenv)"
else
  eval "$(/usr/local/homebrew/bin/brew shellenv)"
fi
pause

# End Homebrew

# Begin dependencies via Homebrew

say-loud "Installing recommended packages and apps with Homebrew"
say "You might be asked for your login password"
say "This might take a while..."
run brew bundle install --no-lock
pause

# End dependencies via Homebrew

# Begin ZSH

say-loud "Setting ZSH as the default shell"
say "You might be asked for your login password..."
run sudo echo "$(brew --prefix)/bin/zsh" >> /etc/shells
run chsh -s "$(brew --prefix)/bin/zsh" "$USER"

say-loud "Creating default ZSH config..."
run cp src/zshrc ~/.zshrc

# End ZSH

# Begin editor

if ! ask_Yn "Are you content with using nano as your 'EDITOR'?"; then
  ask "What should we set 'EDITOR' to?"
  sed -i s/export EDITOR=nano/export EDITOR=\""$REPLY"\"/ ~/.zshrc
  instruct "You might want to check '$REPLY' is installed after we're done."
fi

# End editor

say-loud "We're done!"

say "We installed Homebrew for installing and managing most software"

if m1; then
  say "We installed Intel Homebrew as a backup (aliased as 'ibrew')"
fi

say "We installed the following packages:"
echo
awk '/^brew /{print}' Brewfile | sort | sed -r 's,^brew "(.+)".*$,\1\n    https://formulae.brew.sh/formula/\1\n,'

say "We installed the following applications:"
echo
awk '/^cask /{print}' Brewfile | sort | sed -r 's,^cask "(.+)".*$,\1\n    https://formulae.brew.sh/cask/\1\n,'

say "We set ZSH as the default shell with some default configuration"

pause

instruct "Quit your terminal now"
say "You might like to use the newly installed iTerm.app in future"
